#  _                                _ 
# | |_ ___     ___  _ __  _ __ ___ | |
# | __/ _ \   / _ \| '_ \| '_ ` _ \| |
# | || (_) | | (_) | |_) | | | | | | |
#  \__\___/   \___/| .__/|_| |_| |_|_|
#                  |_|               
#
# Converts the outline tag output of `node index.js` to
# a functioning opml file to import into an RSS reader.
#
# Depends on a js runtime being installed (node, deno, etc), aside from
# regular *NIX tools (like cat and sed).
#
# Tristan Lukens, 2025

#!/bin/bash

runtime="node"

if ! type "node" > /dev/null; then
  echo "node not found on system, trying deno..."

  if ! type "deno" > /dev/null; then
    echo "deno also not found on system. Cannot complete script"
    exit 1
  fi

  runtime="deno"
fi

now=$(date)

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: $0 [-h] [-n]"
    echo "Options:"
    echo " --[h]elp        Display this help message"
    echo " --[n]o-shorts   Exclude shorts and live videos from feeds"
    exit 0
fi

cmd="./src/index.js"
if [[ $1 == "-n" || $1 == "--no-shorts" ]]; then
  cmd="./src/index.js -n"
fi

outlines=$($runtime $cmd | tr -d "\n")

[[ -d ./dist/ ]] || mkdir -p ./dist

# Since I'm on macOS, I'm specifying the file name for
# the backup file — no file — this works differently
# on other UNIX systems
cat ./lib/_feeds.opml\
    | sed "s/<DATE>/${now}/g"\
    | awk -v r="$outlines" '{gsub(/<OUTLINES>/,r)}1'\
    > ./dist/feeds.opml